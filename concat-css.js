const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤ —É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É (—è–∫ –≤–æ–Ω–∏ —ñ–º–ø–æ—Ä—Ç—É—é—Ç—å—Å—è –≤ main.css)
const cssFiles = [
    // ===== BASE =====
    'css/base/reset.css',
    'css/base/typography.css',

    // ===== LAYOUT =====
    'css/layout/header.css',
    'css/layout/navigation.css',
    'css/layout/footer.css',

    // ===== COMPONENTS =====
    'css/components/buttons.css',
    'css/components/cards.css',
    'css/components/modals.css',
    'css/components/forms.css',
    'css/components/tables.css',

    // ===== SECTIONS =====
    'css/sections/webstart_lab.css',
    'css/sections/marquee.css',
    'css/sections/gallery.css',
    'css/sections/search.css',
    'css/sections/about_us.css',
    'css/sections/services.css',
    'css/sections/portfolio.css',
    'css/sections/technical.css',
    'css/sections/advantages.css',
    'css/sections/comparison.css',
    'css/sections/pricing.css',
    'css/sections/promo.css',
    'css/sections/quiz-section.css',
    'css/sections/briefs.css',
    'css/sections/mini_services.css',
    'css/sections/ai_services.css',
    'css/sections/extras.css',
    'css/sections/certificate.css',
    'css/sections/testimonials.css',
    'css/sections/faq.css',
    'css/sections/hosting.css',
    'css/sections/international.css',
    'css/sections/blog.css',
    'css/sections/contact.css',
    'css/sections/socials.css',

    // ===== FEATURES =====
    'css/features/pwa.css',
    'css/features/cookies.css',
    'css/features/breadcrumbs.css',
    'css/features/progress_bar.css',
    'css/features/scroll_top.css',
    'css/features/social_proof.css',
    'css/features/exit_intent.css',
    'css/features/update_banner.css',

    // ===== THEMES =====
    'css/themes/dark_mode.css',

    // ===== UTILS =====
    'css/utils/animations.css',
    'css/utils/responsive.css',
];

let result = '';
let totalFiles = 0;

console.log('üî® –ü–æ—á–∏–Ω–∞—é –æ–±\'—î–¥–Ω–∞–Ω–Ω—è CSS —Ñ–∞–π–ª—ñ–≤...\n');

cssFiles.forEach(file => {
    if (fs.existsSync(file)) {
        const content = fs.readFileSync(file, 'utf8');
        result += `\n/* ========================================\n`;
        result += `   ${file}\n`;
        result += `   ======================================== */\n\n`;
        result += content + '\n';
        totalFiles++;
        console.log(`‚úÖ ${file}`);
    } else {
        console.warn(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${file}`);
    }
});

// –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É dist, —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
if (!fs.existsSync('dist')) {
    fs.mkdirSync('dist');
}

// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±'—î–¥–Ω–∞–Ω–∏–π —Ñ–∞–π–ª
fs.writeFileSync('dist/styles.css', result);

console.log(`\n‚ú® –ì–æ—Ç–æ–≤–æ!`);
console.log(`üì¶ –û–±'—î–¥–Ω–∞–Ω–æ —Ñ–∞–π–ª—ñ–≤: ${totalFiles}`);
console.log(`üìè –†–æ–∑–º—ñ—Ä: ${(result.length / 1024).toFixed(2)} KB`);
console.log(`üìÇ –§–∞–π–ª –∑–±–µ—Ä–µ–∂–µ–Ω–æ: dist/styles.css\n`);