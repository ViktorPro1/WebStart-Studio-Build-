document.addEventListener('DOMContentLoaded', () => {

    // ===== –ü–ª–∞–≤–Ω–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–µ–∫—Ü—ñ–π =====
    const sections = document.querySelectorAll("section");
    const reveal = () => {
        const triggerBottom = window.innerHeight * 0.85;
        sections.forEach(section => {
            const top = section.getBoundingClientRect().top;
            if (top < triggerBottom) section.classList.add("visible");
        });
    };
    window.addEventListener("scroll", reveal);
    reveal();

    // ===== –¢–µ–º–Ω–∞ —Ç–µ–º–∞ =====
    const toggle = document.getElementById("darkModeToggle");
    const body = document.body;
    if (localStorage.getItem("theme") === "dark") {
        body.classList.add("dark-mode");
        if (toggle) toggle.checked = true;
    }
    if (toggle) {
        toggle.addEventListener("change", () => {
            body.classList.toggle("dark-mode");
            localStorage.setItem("theme", body.classList.contains("dark-mode") ? "dark" : "light");
        });
    }

    // ===== –ê–∫—Ü—ñ—è (–∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –≤—ñ–¥–ª—ñ–∫) =====
    const countdown = document.getElementById("countdown");
    if (countdown) {
        const deadline = new Date(2025, 9, 30, 23, 59, 59);
        const updateCountdown = () => {
            const diff = deadline - new Date();
            if (diff <= 0) {
                countdown.innerHTML = "–ß–∞—Å –≤–∏–π—à–æ–≤!";
                return;
            }
            const days = Math.floor(diff / (1000 * 60 * 60 * 24));
            const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
            const minutes = Math.floor((diff / (1000 * 60)) % 60);
            const seconds = Math.floor((diff / 1000) % 60);
            countdown.innerHTML = `–î–æ –∫—ñ–Ω—Ü—è –∞–∫—Ü—ñ—ó: ${days}–¥ ${hours}–≥ ${minutes}—Ö–≤ ${seconds}—Å–µ–∫`;
        };
        updateCountdown();
        setInterval(updateCountdown, 1000);
    }

    // ===== –ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ =====
    const welcomeModal = document.getElementById('welcome-modal');
    const closeWelcomeBtn = document.getElementById('close-btn');
    if (welcomeModal && closeWelcomeBtn) {
        setTimeout(() => { welcomeModal.style.display = 'none'; }, 5000);
        closeWelcomeBtn.addEventListener('click', () => { welcomeModal.style.display = 'none'; });
    }

    // ===== –í—ñ–∫–Ω–æ –¥–æ–ø–æ–º–æ–≥–∏ =====
    const helpPopup = document.getElementById('popup');
    const closePopupBtn = document.getElementById('close-popup');
    if (helpPopup && closePopupBtn) {
        setTimeout(() => { helpPopup.style.display = 'block'; }, 8000);
        closePopupBtn.addEventListener('click', () => { helpPopup.style.display = 'none'; });
    }

    // ===== üî• –ù–û–í–ò–ô –ö–û–î: Placeholder SVG –¥–ª—è –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö —Ñ–æ—Ç–æ =====
    const createPlaceholder = () => {
        return 'data:image/svg+xml,' + encodeURIComponent(`
            <svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 200 200">
                <rect fill="#e0e0e0" width="200" height="200"/>
                <circle cx="100" cy="80" r="30" fill="#999"/>
                <path d="M60 130 Q100 110 140 130 L140 200 L60 200 Z" fill="#999"/>
                <text x="100" y="190" font-family="Arial" font-size="12" fill="#666" text-anchor="middle">–§–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ</text>
            </svg>
        `);
    };

    // ===== üî• –ù–û–í–ò–ô –ö–û–î: –§—É–Ω–∫—Ü—ñ—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ =====
    const loadImageSafely = (imgElement, src, alt) => {
        return new Promise((resolve) => {
            const img = new Image();

            img.onload = () => {
                imgElement.src = src;
                imgElement.alt = alt;
                resolve(true);
            };

            img.onerror = () => {
                console.warn(`‚ö†Ô∏è –§–æ—Ç–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${src}, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ placeholder`);
                imgElement.src = createPlaceholder();
                imgElement.alt = `${alt} (—Ñ–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ)`;
                resolve(false);
            };

            img.src = src;
        });
    };

    // ===== üî• –í–ò–ü–†–ê–í–õ–ï–ù–û: –í—ñ–¥–≥—É–∫–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫ =====
    const photos = document.querySelectorAll('.testimonial-photo');
    if (photos.length > 0) {
        photos.forEach(photo => {
            const originalSrc = photo.src;
            const originalAlt = photo.alt;

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–æ—Ç–æ –±–µ–∑–ø–µ—á–Ω–æ
            loadImageSafely(photo, originalSrc, originalAlt).then(() => {
                photo.classList.add('visible');
                photo.style.opacity = '1';
                photo.style.transform = 'scale(1)';
            });
        });
    }

    // ===== üî• –í–ò–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫ =====
    const allTestimonialImages = [
        'foto/olena.webp', 'foto/nadija.webp', 'foto/volodumer.webp',
        'foto/andriy.webp', 'foto/vika.webp', 'foto/sergey.webp',
        'foto/mariya.webp', 'foto/bogdan.webp', 'foto/sofia.webp'
    ];

    const preloadedImages = {};
    allTestimonialImages.forEach(src => {
        const img = new Image();
        img.onload = () => {
            preloadedImages[src] = src; // –§–æ—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ
        };
        img.onerror = () => {
            console.warn(`‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏: ${src}`);
            preloadedImages[src] = createPlaceholder(); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ placeholder
        };
        img.src = src;
    });

    // ===== üî• –í–ò–ü–†–ê–í–õ–ï–ù–û: –í—ñ–¥–≥—É–∫–∏ (–∞–≤—Ç–æ–ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –∑ –±–µ–∑–ø–µ—á–Ω–∏–º –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º) =====
    const testimonialsData = {
        testimonial1: [
            { img: "foto/olena.webp", alt: "–û–ª–µ–Ω–∞", text: "–í—Å—å–æ–≥–æ –∑–∞ —Ç—Ä–∏ –¥–Ω—ñ –æ—Ç—Ä–∏–º–∞–ª–∞ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–µ –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ. –°—Ç–∏–ª—å–Ω–∏–π –¥–∏–∑–∞–π–Ω, –∞–¥–∞–ø—Ç–∏–≤–Ω—ñ—Å—Ç—å ‚Äî —É—Å–µ –Ω–∞ —Ä—ñ–≤–Ω—ñ!", cite: "‚Äî –û–ª–µ–Ω–∞, –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥" },
            { img: "foto/nadija.webp", alt: "–ù–∞–¥—ñ—è", text: "–†–æ–±–æ—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–∞ —è–∫—ñ—Å–Ω–æ —Ç–∞ —à–≤–∏–¥–∫–æ. –î–∏–∑–∞–π–Ω –º–µ–Ω—ñ –¥—É–∂–µ –ø—ñ–¥—ñ–π—à–æ–≤. –†–µ–∫–æ–º–µ–Ω–¥—É—é —É—Å—ñ–º —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä–∞–º!", cite: "‚Äî –ù–∞–¥—ñ—è, —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä" },
            { img: "foto/volodumer.webp", alt: "–í–æ–ª–æ–¥–∏–º–∏—Ä", text: "–ú—ñ–π –ª–µ–Ω–¥—ñ–Ω–≥ –≤–∏–≥–ª—è–¥–∞—î –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ —ñ –ø—Ä–∏–≤–∞–±–ª–∏–≤–æ ‚Äî —á—É–¥–æ–≤–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –±—É–¥—ñ–≤–µ–ª—å–Ω–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É!", cite: "‚Äî –í–æ–ª–æ–¥–∏–º–∏—Ä, –≤–ª–∞—Å–Ω–∏–∫ –±—É–¥—ñ–≤–µ–ª—å–Ω–æ—ó —Ñ—ñ—Ä–º–∏" }
        ],
        testimonial2: [
            { img: "foto/andriy.webp", alt: "–ê–Ω–¥—Ä—ñ–π", text: "–û—Ç—Ä–∏–º–∞–≤ —Å—É—á–∞—Å–Ω–∏–π —Å–∞–π—Ç –¥–ª—è –º–∞–≥–∞–∑–∏–Ω—É –∑–∞ —Ä–µ–∫–æ—Ä–¥–Ω—ñ —Å—Ç—Ä–æ–∫–∏. –†–æ–±–æ—Ç–∞ –ø–µ—Ä–µ–≤–µ—Ä—à–∏–ª–∞ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è!", cite: "‚Äî –ê–Ω–¥—Ä—ñ–π, –≤–ª–∞—Å–Ω–∏–∫ –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω—É" },
            { img: "foto/vika.webp", alt: "–í—ñ–∫–∞", text: "–õ–µ–Ω–¥—ñ–Ω–≥ –∑—Ä–æ–±–∏–ª–∏ –∑–∞ –¥–≤–∞ –¥–Ω—ñ! –°—Ç–∏–ª—å–Ω–æ, –∑—Ä–æ–∑—É–º—ñ–ª–æ, —ñ –∫–ª—ñ—î–Ω—Ç–∞–º –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è. –Ø –∑–∞–¥–æ–≤–æ–ª–µ–Ω–∞!", cite: "‚Äî –í—ñ–∫–∞, –≤–ª–∞—Å–Ω–∏—Ü—è –ø–µ—Ä—É–∫–∞—Ä–Ω—ñ" },
            { img: "foto/sergey.webp", alt: "–°–µ—Ä–≥—ñ–π", text: "–ü—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É —Å–∞–π—Ç—É –∑–∞—è–≤–∫–∏ –ø–æ—á–∞–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–∏ –≤—ñ–¥—Ä–∞–∑—É. –î—É–∂–µ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ!", cite: "‚Äî –°–µ—Ä–≥—ñ–π, —Ñ–µ—Ä–º–µ—Ä" }
        ],
        testimonial3: [
            { img: "foto/mariya.webp", alt: "–ú–∞—Ä—ñ—è", text: "–ü—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —Ä–µ–∑—é–º–µ –º–µ–Ω–µ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –æ–¥—Ä–∞–∑—É –Ω–∞ –∫—ñ–ª—å–∫–∞ —Å–ø—ñ–≤–±–µ—Å—ñ–¥. –î—É–∂–µ –≤–¥—è—á–Ω–∞!", cite: "‚Äî –ú–∞—Ä—ñ—è, —à—É–∫–∞—á–∫–∞ —Ä–æ–±–æ—Ç–∏" },
            { img: "foto/bogdan.webp", alt: "–ë–æ–≥–¥–∞–Ω", text: "–†–µ–∑—é–º–µ –≤–∏–∫–æ–Ω–∞–Ω–µ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ. –ü–æ–¥–∞—á–∞, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äî –≤—Å–µ –Ω–∞ –≤–∏—Å–æ–∫–æ–º—É —Ä—ñ–≤–Ω—ñ. –û—Ç—Ä–∏–º–∞–≤ –Ω–æ–≤—É –ø–æ—Å–∞–¥—É!", cite: "‚Äî –ë–æ–≥–¥–∞–Ω, —Ä–µ–∫—Ä—É—Ç–µ—Ä" },
            { img: "foto/sofia.webp", alt: "–°–æ—Ñ—ñ—è", text: "–°–∞–π—Ç –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ –∑—Ä–æ–±–ª–µ–Ω–∏–π –∑ –∫—Ä–µ–∞—Ç–∏–≤–æ–º —ñ —Å–º–∞–∫–æ–º. –ó–∞–º–æ–≤–ª—è—Ç–∏–º—É —â–µ –±–∞–Ω–µ—Ä–∏ –π —Å—Ç–æ—Ä—ñ–Ω–∫–∏!", cite: "‚Äî –°–æ—Ñ—ñ—è, –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥" }
        ]
    };

    function rotateTestimonials(id) {
        const container = document.getElementById(id);
        if (!container || !testimonialsData[id]) return;

        let index = 0;
        setInterval(() => {
            index = (index + 1) % testimonialsData[id].length;
            const t = testimonialsData[id][index];

            const imgElement = container.querySelector('img');
            const contentP = container.querySelector('.testimonial-content p');
            const contentCite = container.querySelector('.testimonial-content cite');

            // –ü–ª–∞–≤–Ω–µ –∑–Ω–∏–∫–Ω–µ–Ω–Ω—è
            imgElement.style.opacity = '0';
            imgElement.style.transform = 'scale(0.8)';

            setTimeout(() => {
                // üî• –ù–û–í–ò–ô –ö–û–î: –ë–µ–∑–ø–µ—á–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ
                const finalSrc = preloadedImages[t.img] || createPlaceholder();

                imgElement.src = finalSrc;
                imgElement.alt = t.alt;
                contentP.textContent = t.text;
                contentCite.textContent = t.cite;

                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–æ–∫–∞–∑—É—î–º–æ
                imgElement.classList.add('visible');
                imgElement.style.opacity = '1';
                imgElement.style.transform = 'scale(1)';
            }, 300);
        }, 20000);
    }

    ['testimonial1', 'testimonial2', 'testimonial3'].forEach(rotateTestimonials);

    // ===== –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ—é =====
    window.share = function (network) {
        const url = encodeURIComponent('https://scintillating-sunshine-94e986.netlify.app/');
        const text = encodeURIComponent('WebStart Studio!');
        let shareUrl = '';
        switch (network) {
            case 'facebook': shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${url}`; break;
            case 'telegram': shareUrl = `https://t.me/share/url?url=${url}&text=${text}`; break;
            case 'viber': return alert('–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å —É Viber, —Å–∫–æ–ø—ñ—é–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: ' + decodeURIComponent(url));
            case 'linkedin': shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${url}`; break;
            case 'messenger': shareUrl = `fb-messenger://share/?link=${url}`; break;
            default: return alert('–°–æ—Ü–º–µ—Ä–µ–∂–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è');
        }
        window.open(shareUrl, '_blank', 'width=600,height=400');
    };

    // ===== –ü–æ–∫–∞–∑/–ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ —Ü—ñ–Ω =====
    const toggleBtn = document.getElementById('togglePricing');
    const pricingTable = document.getElementById('pricingTable');
    const linkWrapper = document.getElementById('linkWrapper');
    if (toggleBtn && pricingTable && linkWrapper) {
        toggleBtn.addEventListener('click', () => {
            const visible = pricingTable.style.display === 'table';
            pricingTable.style.display = visible ? 'none' : 'table';
            linkWrapper.style.display = visible ? 'none' : 'block';
            toggleBtn.setAttribute('aria-expanded', !visible);
            toggleBtn.textContent = visible ? '–ó–Ω–∞–π—Ç–∏ –Ω–∞–π–≤–∏–≥—ñ–¥–Ω—ñ—à–∏–π –ø–∞–∫–µ—Ç' : '–ø—Ä–∏—Ö–æ–≤–∞—Ç–∏';
        });
    }

    // ===== –ì–∞–ª–µ—Ä–µ—è =====
    const track = document.getElementById('galleryTrack');
    const modal = document.getElementById('galleryModal');
    const modalImg = document.getElementById('galleryModalImg');
    const closeGallery = document.getElementById('galleryClose');
    const slider = document.querySelector('.gallery-marquee-slider');
    const wrapper = document.querySelector('.gallery-marquee-wrapper');
    if (wrapper) wrapper.style.display = 'block';
    if (track && modal && modalImg && closeGallery) {
        track.querySelectorAll('.gallery-marquee-image').forEach(img => {
            img.addEventListener('click', () => {
                modalImg.src = img.currentSrc || img.src;
                modal.classList.remove('hidden');
                document.body.classList.add('modal-open');
            });
        });
        closeGallery.addEventListener('click', () => {
            modal.classList.add('hidden');
            document.body.classList.remove('modal-open');
        });
        let startX = 0, lastMove = 0;
        track.addEventListener('touchstart', e => startX = e.touches[0].clientX);
        track.addEventListener('touchmove', e => {
            const now = Date.now();
            if (now - lastMove < 16) return;
            lastMove = now;
            const diff = startX - e.touches[0].clientX;
            track.scrollLeft += diff;
            startX = e.touches[0].clientX;
        });
        if (slider) slider.addEventListener('input', () => {
            track.scrollLeft = (slider.value / 100) * (track.scrollWidth - track.clientWidth);
        });
    }

    // ===== –ü–æ—à—É–∫ –ø–æ —Å–µ–∫—Ü—ñ—è—Ö =====
    const searchForm = document.getElementById('simple-search-form');
    const searchInput = document.getElementById('search-input');
    const feedbackDiv = document.getElementById('search-feedback');

    if (searchForm && searchInput && feedbackDiv) {
        const sectionMap = {
            '–ø–æ—Å–ª—É–≥–∏': 'services', '—Å—Ç–≤–æ—Ä—é—î–º–æ': 'services', '–≤–µ—Ä—Å—Ç–∫–∞': 'services', '—Ä–µ–∑—é–º–µ': 'services',
            '–ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ': 'portfolio', '—Ä–æ–±–æ—Ç–∏': 'portfolio', '–∫–µ–π—Å–∏': 'portfolio', '–ª–µ–Ω–¥—ñ–Ω–≥': 'portfolio',
            '—Ç–µ—Ö—Å–µ—Ä–≤—ñ—Å': 'technical-features', '—Ç–µ—Ö–Ω—ñ—á–Ω—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ': 'technical-features',
            '–ø–µ—Ä–µ–≤–∞–≥–∏': 'advantages', '—á–æ–º—É –º–∏': 'advantages', '–ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è': 'platform-comparison',
            '–ø–∞–∫–µ—Ç–∏': 'pricing', '—Ü—ñ–Ω–∏': 'pricing', '–∞–∫—Ü—ñ—ó': 'promo', '–æ—Ç—Ä–∏–º–∞—Ç–∏': 'briefs', '–±—Ä–∏—Ñ': 'briefs',
            '–º—ñ–Ω—ñ-—Å–µ—Ä–≤—ñ—Å': 'mini-services', 'ai': 'ai-prompting-dynamic', 'ai —Å–µ—Ä–≤—ñ—Å': 'ai-prompting-dynamic',
            '–¥–æ–¥–∞—Ç–∫–æ–≤–µ': 'extras', '–≤—ñ–¥–≥—É–∫–∏': 'testimonials', 'faq': 'faq', '–∑–∞–ø–∏—Ç–∞–Ω–Ω—è': 'faq',
            '—Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è': 'hosting-help', '—Ö–æ—Å—Ç–∏–Ω–≥': 'hosting-help', 'international': 'international',
            '–±–ª–æ–≥': 'blog', '–Ω–æ–≤–∏–Ω–∏': 'blog', '–∫–æ–Ω—Ç–∞–∫—Ç–∏': 'contact-gift-wrapper', '–∑–≤\'—è–∑–æ–∫': 'contact-gift-wrapper',
            '–±–æ–Ω—É—Å': 'guide-bonus', '–ø—É—Ç—ñ–≤–Ω–∏–∫': 'guide-bonus', '—Å–æ—Ü–º–µ—Ä–µ–∂—ñ': 'social',
            '—Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç': 'certificate-gift', '—Å—É–≤–µ–Ω—ñ—Ä': 'certificate-gift'
        };


        searchForm.addEventListener('submit', e => {
            e.preventDefault();
            const query = searchInput.value.trim().toLowerCase();
            feedbackDiv.textContent = '';

            if (!query) {
                feedbackDiv.textContent = '–í–≤–µ–¥—ñ—Ç—å –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ—à—É–∫—É.';
                return;
            }

            let foundId = null;
            for (const key in sectionMap) {
                if (query.includes(key)) {
                    foundId = sectionMap[key];
                    break;
                }
            }

            if (foundId) {
                const target = document.getElementById(foundId);
                if (target) {
                    const topOffset = target.getBoundingClientRect().top + window.scrollY - 80;
                    window.scrollTo({ top: topOffset, behavior: 'smooth' });

                    target.classList.add('highlight-search');
                    setTimeout(() => target.classList.remove('highlight-search'), 2000);

                    searchInput.value = '';
                    feedbackDiv.textContent = '';
                    return;
                }
            }

            feedbackDiv.textContent = `–°–µ–∫—Ü—ñ—è –∑–∞ –∑–∞–ø–∏—Ç–æ–º "${query}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –°–ø—Ä–æ–±—É–π—Ç–µ: –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ, –ü–æ—Å–ª—É–≥–∏, –ö–æ–Ω—Ç–∞–∫—Ç–∏.`;
        });
    }
});