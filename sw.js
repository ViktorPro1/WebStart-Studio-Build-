// üî• –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è - –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω—ñ—á–æ–≥–æ –º—ñ–Ω—è—Ç–∏ –≤—Ä—É—á–Ω—É
const CACHE_NAME = `webstart-cache-${self.registration.scope}`;
const urlsToCache = [
    "/",
    "/index.html",
    '/css/main.css',
    "/scripts/main.js",
    "/scripts/ui-scroll.js",
    "/scripts/analytics.js",
    "/scripts/instruction.js",
    "/scripts/init.js",
    "/scripts/calculator.js",
    "/scripts/pwa-loader.js",
    "/scripts/social-proof.js",
    "/scripts/script.js",
    "/scripts/structured-data.js",
    "/scripts/exit-intent.js",
    "/scripts/footer-year.js",
    "/icons/icon-192x192.webp",
    "/icons/icon-512x512.webp",

    // –§–æ—Ç–æ –¥–ª—è –≤—ñ–¥–≥—É–∫—ñ–≤
    "/foto/olena.webp",
    "/foto/andriy.webp",
    "/foto/mariya.webp",
    "/foto/nadija.webp",
    "/foto/volodumer.webp",
    "/foto/vika.webp",
    "/foto/sergey.webp",
    "/foto/bogdan.webp",
    "/foto/sofia.webp",

    // CSS –º–æ–¥—É–ª—ñ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ HTML
    "/other_styles/404.css", "/pages/404.html",
    "/other_styles/achievement.css", "/pages/achievement.html",
    "/other_styles/adaptive-info.css", "/pages/adaptive-info.html",
    "/other_styles/ai-prompting.css", "/pages/ai-prompting.html",
    "/other_styles/animations-info.css", "/pages/animations-info.html",
    "/other_styles/blog-info.css", "/pages/blog-info.html",
    "/other_styles/blog-landing-trends.css", "/pages/blog-landing-trends.html",
    "/other_styles/blog-portfolio-tips.css", "/pages/blog-portfolio-tips.html",
    "/other_styles/blog-resume-tips.css", "/pages/blog-resume-tips.html",
    "/other_styles/calc.css", "/pages/calc.html",
    "/other_styles/contact.css", "/pages/contact.html",
    "/other_styles/declaration.css", "/pages/declaration.html",
    "/other_styles/djon.css", "/pages/djon.html",
    "/other_styles/ecommerce-info.css", "/pages/ecommerce-info.html",
    "/other_styles/instruction.css", "/pages/instruction.html",
    "/other_styles/offer.css", "/pages/offer.html",
    "/other_styles/pc-service.css", "/pages/pc-service.html",
    "/other_styles/personalized-landing-info.css", "/pages/personalized-landing-info.html",
    "/other_styles/portfolio-info.css", "/pages/portfolio-info.html",
    "/other_styles/portfolio-text-generator.css", "/pages/portfolio-text-generator.html",
    "/other_styles/price.css", "/pages/price.html",
    "/other_styles/privacy.css", "/pages/privacy.html",
    "/other_styles/project-checker.css", "/pages/project-checker.html",
    "/other_styles/prompt-editor.css", "/pages/prompt-editor.html",
    "/other_styles/pwa-info.css", "/pages/pwa-info.html",
    "/other_styles/resume-info.css", "/pages/resume-info.html",
    "/other_styles/resume-structure-generator.css", "/pages/resume-structure-generator.html",
    "/other_styles/service-recommendation.css", "/pages/service-recommendation.html",
    "/other_styles/skills.css", "/pages/skills.html",
    "/other_styles/socialmedia-info.css", "/pages/socialmedia-info.html",
    "/other_styles/target.css", "/pages/target.html",
    "/other_styles/technical-details.css", "/pages/technical-details.html",
    "/other_styles/terms.css", "/pages/terms.html",
    "/other_styles/utm.css", "/pages/utm.html",
    "/other_styles/webapp-info.css", "/pages/webapp-info.html",
    "/other_styles/ai-automatization.css", "/pages/ai-automatization.html"
];

// –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è SW - –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–Ω–æ–≤–ª—é—î –∫–µ—à
self.addEventListener("install", event => {
    self.skipWaiting();
    event.waitUntil(
        caches.open(CACHE_NAME).then(cache =>
            Promise.allSettled(
                urlsToCache.map(url =>
                    cache.add(url).catch(err => {
                        console.warn(`‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—å –∫–µ—à—É–≤–∞—Ç–∏: ${url}`, err.message);
                    })
                )
            )
        )
    );
});

// –ê–∫—Ç–∏–≤–∞—Ü—ñ—è SW - –í–ò–î–ê–õ–Ø–Ñ –≤—Å—ñ —Å—Ç–∞—Ä—ñ –∫–µ—à—ñ
self.addEventListener("activate", event => {
    clients.claim();
    event.waitUntil(
        caches.keys().then(names =>
            Promise.all(
                names.map(name => {
                    // –í–∏–¥–∞–ª—è—î–º–æ –í–°–Ü –∫–µ—à—ñ –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ
                    if (name !== CACHE_NAME) {
                        console.log(`üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä–∏–π –∫–µ—à: ${name}`);
                        return caches.delete(name);
                    }
                })
            )
        ).then(() => {
            // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –≤—Å—ñ –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            return self.clients.matchAll().then(clients => {
                clients.forEach(client => client.postMessage({ type: 'CACHE_UPDATED' }));
            });
        })
    );
});

// Fetch - Network First –¥–ª—è —Ñ–æ—Ç–æ, Cache First –¥–ª—è —Ä–µ—à—Ç–∏
self.addEventListener("fetch", event => {
    if (event.request.method !== "GET") return;

    const url = new URL(event.request.url);
    if (url.origin !== location.origin) return;

    // –î–ª—è —Ñ–æ—Ç–æ - –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç –º–µ—Ä–µ–∂—ñ (–∑–∞–≤–∂–¥–∏ —Å–≤—ñ–∂—ñ)
    if (url.pathname.includes('/foto/')) {
        event.respondWith(
            fetch(event.request)
                .then(response => {
                    const responseClone = response.clone();
                    caches.open(CACHE_NAME)
                        .then(cache => cache.put(event.request, responseClone))
                        .catch(err => console.warn('–ü–æ–º–∏–ª–∫–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ:', err));
                    return response;
                })
                .catch(() =>
                    caches.match(event.request)
                        .then(cached => cached || new Response("üì∑ –§–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ", {
                            status: 503,
                            statusText: "Service Unavailable"
                        }))
                )
        );
        return;
    }

    // –î–ª—è —ñ–Ω—à–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤ - Cache First (—à–≤–∏–¥—à–µ)
    event.respondWith(
        caches.match(event.request).then(cached => {
            // –Ø–∫—â–æ —î –≤ –∫–µ—à—ñ - –≤—ñ–¥–¥–∞—î–º–æ, –∞–ª–µ –≤ —Ñ–æ–Ω—ñ –æ–Ω–æ–≤–ª—é—î–º–æ
            if (cached) {
                // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ —Ñ–æ–Ω—ñ
                fetch(event.request)
                    .then(response => {
                        if (response && response.status === 200) {
                            const responseClone = response.clone();
                            caches.open(CACHE_NAME)
                                .then(cache => cache.put(event.request, responseClone));
                        }
                    })
                    .catch(() => { });

                return cached;
            }

            // –Ø–∫—â–æ –Ω–µ–º–∞—î –≤ –∫–µ—à—ñ - –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ
            return fetch(event.request)
                .then(response => {
                    if (!response || response.status !== 200 || response.type === 'error') {
                        return response;
                    }

                    const responseClone = response.clone();
                    caches.open(CACHE_NAME)
                        .then(cache => cache.put(event.request, responseClone))
                        .catch(err => console.warn('–ü–æ–º–∏–ª–∫–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è:', err));

                    return response;
                })
                .catch(() =>
                    new Response("‚ö†Ô∏è –ù–µ–º–∞—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è", {
                        status: 503,
                        statusText: "Service Unavailable"
                    })
                );
        })
    );
});